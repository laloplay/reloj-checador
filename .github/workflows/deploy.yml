# Nombre del flujo de trabajo que verás en GitHub
name: Desplegar Proyecto en Servidor

# Define cuándo se debe ejecutar el robot:
# cada vez que subas cambios a la rama 'main'
on:
  push:
    branches: [ main ]

# Define los trabajos que el robot debe hacer
jobs:
  deploy:
    # El robot usará una máquina virtual con Ubuntu para trabajar
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Descargar tu código desde GitHub a la máquina virtual
    - name: 1. Descargar código del repositorio
      uses: actions/checkout@v3

    # Paso 2: Instalar Node.js en la máquina virtual para poder construir el frontend
    - name: 2. Configurar Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Paso 3: Construir el frontend (compilar el React)
    - name: 3. Construir el Frontend
      run: |
        cd frontend
        npm install
        npm run build

    # Paso 4: Copiar la carpeta del backend a tu servidor
    - name: 4. Subir Backend al Servidor
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "backend/"
        target: "/var/www/reloj-checador-a"

    # Paso 5: Borrar la carpeta 'dist' vieja y subir la nueva
    - name: 5. Subir Frontend Compilado al Servidor
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "frontend/dist/"
        target: "/var/www/reloj-checador-a"
        overwrite: true
        command_timeout: 2m

    # Paso 6: Conectarse al servidor y reiniciar la aplicación
    - name: 6. Reiniciar la aplicación en el servidor
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/reloj-checador-a/backend
          npm install --production
          pm2 restart api-checador